load("C:/Users/gusth/Downloads/data.RData")
df
class(df)
#Por onde pessoas não ocupadas buscam emprego, separado BF ----
busca_emprego <- df %>%
srvyr::as_survey(strata = stype) %>%
srvyr::group_by(UF, V4072A, VI5002A) %>%
srvyr::survey_tally() %>%
drop_na()
library(PNADcIBGE)
library(srvyr)
library(tidyverse)
library(RColorBrewer)
library(sf)
library(geobr)
library(stringi)
library(openxlsx)
#Por onde pessoas não ocupadas buscam emprego, separado BF ----
busca_emprego <- df %>%
srvyr::as_survey(strata = stype) %>%
srvyr::group_by(UF, V4072A, VI5002A) %>%
srvyr::survey_tally() %>%
drop_na()
carteira_assinada <- df %>%
srvyr::as_survey(strata = stype) %>%
srvyr::group_by(UF, V4029, VI5002A) %>%
srvyr::survey_tally() %>%
pivot_wider(names_from = V4029, values_from = n, id_cols = c(UF, VI5002A)) %>%
filter(VI5002A != "Ignorado") %>%
mutate(tx_carteira_assinada = Sim/(Sim + Não),
UF = stri_trans_general(str = str_to_title(UF),
id = "Latin-ASCII"),
VI5002A = ifelse(VI5002A == "Sim", "Recebe Bolsa Família", "Não Recebe Bolsa Família")) %>%
left_join(estados_geometria)
teste <- df
teste.2 <- df
teste3 <- df
carteira_assinada2 <- df %>%
srvyr::as_survey(strata = stype) %>%
srvyr::group_by(UF, V4029, VI5002A) %>%
srvyr::survey_tally() %>%
pivot_wider(names_from = V4029, values_from = n, id_cols = c(UF, VI5002A)) %>%
filter(VI5002A != "Ignorado") %>%
mutate(tx_carteira_assinada = Sim/(Sim + Não),
UF = stri_trans_general(str = str_to_title(UF),
id = "Latin-ASCII"),
VI5002A = ifelse(VI5002A == "Sim", "Recebe Bolsa Família", "Não Recebe Bolsa Família")) %>%
left_join(estados_geometria)
load("C:/Users/gusth/Downloads/dados.RData")
#Inclusão Digital ----
inclusao_digital <- df %>%
srvyr::as_survey(strata = stype) %>%
srvyr::group_by(UF, VI5002A, S070045, S070046, S070047, S07005B2, S07005B3, S07005B4) %>%
srvyr::survey_tally() %>%
select(-n_se) %>%
filter(VI5002A != 9) %>%
mutate(VI5002A = ifelse(VI5002A == 1, "recebe", "nao_recebe"),
S01025 = ifelse(S01025 == 4, 2, 1),
S01030A1 = ifelse(S01030A1 == 3, NA, S01030A1)) %>%
drop_na()
library(PNADcIBGE)
library(srvyr)
library(tidyverse)
library(RColorBrewer)
library(sf)
library(geobr)
library(stringi)
library(openxlsx)
#Inclusão Digital ----
inclusao_digital <- df %>%
srvyr::as_survey(strata = stype) %>%
srvyr::group_by(UF, VI5002A, S070045, S070046, S070047, S07005B2, S07005B3, S07005B4) %>%
srvyr::survey_tally() %>%
select(-n_se) %>%
filter(VI5002A != 9) %>%
mutate(VI5002A = ifelse(VI5002A == 1, "recebe", "nao_recebe"),
S01025 = ifelse(S01025 == 4, 2, 1),
S01030A1 = ifelse(S01030A1 == 3, NA, S01030A1)) %>%
drop_na()
#Inclusão Digital ----
inclusao_digital <- df %>%
srvyr::as_survey(strata = stype) %>%
srvyr::group_by(UF, VI5002A, S070045, S070046, S070047, S07005B2, S07005B3, S07005B4) %>%
srvyr::survey_tally() %>%
select(-n_se) %>%
filter(VI5002A != 9) %>%
mutate(VI5002A = ifelse(VI5002A == 1, "recebe", "nao_recebe")) %>%
drop_na()
pessoas.uf <- inclusao_digital %>%
group_by(UF, VI5002A) %>%
summarize(n_total = sum(n))
inclusao_digital %>%
left_join(pessoas.uf) %>%
ungroup() %>%
mutate(prop = n / n_total,
across(c(S070045, S070046, S070047, S07005B2, S07005B3, S07005B4), ~ ifelse(. == 1, prop, 0))) %>%
group_by(UF, VI5002A) %>%
summarize(across(c(S070045, S070046, S070047, S07005B2, S07005B3, S07005B4), sum)) %>%
pivot_wider(id_cols = UF, names_from = VI5002A, values_from = c(S070045, S070046, S070047, S07005B2, S07005B3, S07005B4)) %>%
left_join(municipios) %>%
select(-UF, UF = nome)
library(PNADcIBGE)
library(srvyr)
library(tidyverse)
library(RColorBrewer)
library(sf)
library(geobr)
library(stringi)
library(openxlsx)
df <- PNADcIBGE::get_pnadc(2022, topic = 4, labels = FALSE, design = TRUE)
#Inclusão Digital BRASIL----
inclusao_digital <- df %>%
srvyr::as_survey(strata = stype) %>%
srvyr::group_by(VI5002A, across(c(starts_with("S07002"), starts_with("S07004"), starts_with("S07004A"), S07006, S07007))) %>%
srvyr::survey_tally() %>%
select(-n_se)
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(prop = sum(sim)/sum(n)) %>%
pivot_wider(names_from = name, values_from = prop) %>%
openxlsx::write.xlsx("tabelas/inclusao_digital_brasil.xlsx")
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(prop = sum(sim)/sum(n)) %>%
pivot_wider(names_from = name, values_from = prop)
inclusao_digital
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(prop = sum(sim)/sum(n)) %>%
pivot_wider(names_from = name, values_from = prop)
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(prop = sum(sim)/sum(n)) %>%
pivot_wider(names_from = name, values_from = prop) %>% VIew()
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(prop = sum(sim)/sum(n)) %>%
pivot_wider(names_from = name, values_from = prop) %>% View()
View(inclusao_digital)
inclusao_digital %>%
pivot_longer(!n)
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0))
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(sim = sum(sim),
total = sum(total)) %>%
mutate(prop = sim  total)
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(sim = sum(sim),
total = sum(total)) %>%
mutate(prop = sim / total)
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(sim = sum(n),
total = sum(n)) %>%
mutate(prop = sim / total)
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(sim = sum(sim),
total = sum(n)) %>%
mutate(prop = sim/total)
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(sim = sum(sim),
total = sum(n)) %>%
mutate(prop = sim/total) %>%
pivot_wider(names_from = name, values_from = prop) %>% View()
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(sim = sum(sim),
total = sum(n)) %>%
mutate(prop = sim/total)
pivot_wider(names_from = name, values_from = c(sim, total, prop)) %>% View()
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(sim = sum(sim),
total = sum(n)) %>%
mutate(prop = sim/total) %>%
pivot_wider(names_from = name, values_from = c(sim, total, prop)) %>% View()
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(sim = sum(sim),
total = sum(n)) %>%
mutate(prop = sim/total) %>% View()
inclusao_digital %>%
pivot_longer(!c(n,VI5002A)) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(VI5002A, name) %>%
summarize(sim = sum(sim),
total = sum(n)) %>%
mutate(prop = sim/total) %>% View()
library(OpenStreetMap)
# Teste a instalação do Tensorflow com o comando
tensorflow::tf$constant("Hello TensorFlow!")
# Instale o Tensorflow com os comandos:
remotes::install_github("rstudio/tensorflow")
# Instale o Tensorflow com os comandos:
remotes::install_github("rstudio/tensorflow", force = TRUE)
tensorflow::install_tensorflow(version = "cpu")
# Teste a instalação do Tensorflow com o comando
tensorflow::tf$constant("Hello TensorFlow!")
# Teste a instalação do Tensorflow com o comando
tensorflow::tf$constant("Hello TensorFlow!")
# Teste a instalação do Tensorflow com o comando
tensorflow::tf$constant("Hello TensorFlow!")
# Instale a biblioteca Keras com os seguintes comandos:
remotes::install_github("rstudio/keras", force = TRUE)
keras3::install_keras(envname = "r-tensorflow")
# Para testar a instalação da Keras, rode:
library(keras3)
mnist = dataset_mnist()
setwd("C:/git/densidade")
library(tidyverse)
df <- read_csv("dados/IPTU/2024.csv")
df <- read_csv("dados/IPTU_2024.csv")
df <- read_csv("dados/IPTU_2024.csv", delim = ";")
df <- read_delim("dados/IPTU_2024.csv", delim = ";")
df
df %>%
head(100) %>%
View()
df <- read.csv("dados/IPTU_2024.csv", sep=";", encoding = "Latin-1")
df %>%
head(100) %>%
View()
df <- read.csv("dados/IPTU_2024.csv", sep=";", encoding = "UTF-8")
df %>%
head(100) %>%
View()
df <- read.csv("dados/IPTU_2024.csv", sep=";", encoding = "Latin")
View(df)
df %>% select("TIPO.DE.USO.DO.IMOVEL")
df <- read.csv("dados/IPTU_2024.csv", sep=";", encoding = "latin")
df %>%
head(100) %>%
View()
df <- read.csv("dados/IPTU_2024.csv", sep=";", encoding = "ISO 8859–1")
df %>%
head(100) %>%
View()
df <- read.csv("dados/IPTU_2024.csv", sep=";", encoding = "8859–1")
df %>%
head(100) %>%
View()
df <- read.csv("dados/IPTU_2024.csv", sep=";", encoding = "latin1")
df %>%
head(100) %>%
View()
quadras_viarias <- read_sf("dados/quadras_viarias/SIRGAS_SHP_quadraviariaed_2017.shp") %>% st_set_crs("epsg:31983")
library(sf)
quadras_viarias <- read_sf("dados/quadras_viarias/SIRGAS_SHP_quadraviariaed_2017.shp") %>% st_set_crs("epsg:31983")
View(quadras_viarias)
View(df)
logradouro <- read_sf("geosampa/logradouro/SIRGAS_SHP_logradouronbl_line.shp") %>% st_set_crs("epsg:31983")
logradouro <- read_sf("dados/logradouro/SIRGAS_SHP_logradouronbl_line.shp") %>% st_set_crs("epsg:31983")
View(logradouro)
quadras <- read_sf("dados/quadras_viarias/SIRGAS_SHP_quadraMDSF.shp") %>% st_set_crs("epsg:31983")
quadras <- read_sf("dados/quadras/SIRGAS_SHP_quadraMDSF.shp") %>% st_set_crs("epsg:31983")
View(quadras)
IPTU <- read.csv("dados/IPTU_2024.csv", sep=";", encoding = "latin1") %>%
select()
IPTU <- read.csv("dados/IPTU_2024.csv", sep=";", encoding = "latin1")
IPTU <- read.csv("dados/IPTU/IPTU_2024.csv", sep=";", encoding = "latin1")
remove(df)
censo <- read.csv("dados/censo.csv")
View(censo)
censo <- read.csv("dados/censo.csv", sep = ";")
View(censo)
censo <- read.csv("dados/censo_sp.csv", sep = ";")
View(censo)
View(censo)
censo <- read.csv("dados/censo.csv", sep = ";")
censo <- read.csv("dados/censo/censo.csv", sep = ";")
censo.malha <- read.csv("dados/censo/SP_Malha_Preliminar_2022.shp")
censo.malha <- read_sf("dados/censo/SP_Malha_Preliminar_2022.shp")
View(censo.malha)
censo <- read_sf("dados/censo/SP_Malha_Preliminar_2022.shp")
remove(censo.malha)
censo
censo %>%
ggplot() +
geom_sf()
ggplot() +
geom_sf(aes(fill = V0001/AREA_KM2)) +
theme_void()
censo %>%
filter(CD_MUN == 3550308)
censo %>%
filter(CD_MUN == 3550308)
ggplot() +
geom_sf(aes(fill = V0001/AREA_KM2)) +
theme_void()
censo %>%
filter(CD_MUN == "3550308") %>%
ggplot() +
geom_sf(aes(fill = V0001/AREA_KM2)) +
theme_void()
censo %>%
filter(CD_MUN == "3550308")
censo %>%
filter(CD_MUN == "3550308") %>% View()
censo %>%
filter(CD_MUN == "3550308") %>%
ggplot() +
geom_sf(aes(fill = v0001/AREA_KM2)) +
theme_void()
ggsave("mapa.png", width = 20, height = 20, dpi = 300)
censo %>%
filter(CD_MUN == "3550308")
censo %>%
filter(CD_MUN == "3550308") %>%
mutate(densidade = v0001/AREA_KM2)
censo %>%
filter(CD_MUN == "3550308") %>%
mutate(densidade = v0001/AREA_KM2) %>% View()
x <- c(5, 1, 3, 2, 2)
cume_dist(x)
percent_rank(x
percent_rank(x)
percent_rank(x)
x <- c(5, 1, 3, 2, 2, 2, 2, 2, 2)
percent_rank(x)
x <- c(5, 1, 3, 2, 2, 2, 2, 2, 2, 1, 2, 3, 4, 5, 6)
percent_rank(x)
quantile(x)
percentile(x)
ntile(x)
ntile(x, 2)
ntile(x, 10)
x <- c(1,2,3,4,5)
ntile(x, 2)
x <- c(1,2,3,4,5,6)
ntile(x, 2)
x <- c(1,2,3,4,5,1)
ntile(x, 2)
censo %>%
filter(CD_MUN == "3550308") %>%
mutate(densidade = v0001/AREA_KM2,
decil = ntile(densidade, 10)) %>%
ggplot() +
geom_sf(aes(fill = decil)) +
theme_void()
ggsave("mapa.png", width = 20, height = 20, dpi = 300)
censo %>%
filter(CD_MUN == "3550308") %>%
mutate(densidade = v0001/AREA_KM2,
decil = ntile(densidade, 10)) %>%
ggplot() +
geom_sf(aes(fill = factor(decil)), color = NA) +
scale_fill_viridis_d() +
theme_void()
ggsave("mapa.png", width = 20, height = 20, dpi = 300)
gg <- censo %>%
filter(CD_MUN == "3550308") %>%
mutate(densidade = v0001/AREA_KM2,
decil = ntile(densidade, 10)) %>%
ggplot() +
geom_sf(aes(fill = factor(decil)), color = NA) +
scale_fill_viridis_d() +
theme_void()
ggsave("mapa.png", gg, width = 20, height = 20, dpi = 400)
gg <- censo %>%
filter(CD_MUN == "3550308") %>%
mutate(densidade = v0001/AREA_KM2,
decil = ntile(densidade, 10)) %>%
ggplot() +
geom_sf(aes(fill = factor(decil)), color = NA) +
scale_fill_viridis_d() +
labs(fill = "Decil de densidade")
theme_void()
gg <- censo %>%
filter(CD_MUN == "3550308") %>%
mutate(densidade = v0001/AREA_KM2,
decil = ntile(densidade, 10)) %>%
ggplot() +
geom_sf(aes(fill = factor(decil)), color = NA) +
scale_fill_viridis_d() +
labs(fill = "Decil de densidade") +
theme_void()
ggsave("mapa.png", gg, width = 20, height = 20, dpi = 400)
View(IPTU)
View(quadras_viarias)
View(quadras)
quadras
quadras %>% distinct(qd_tx_tipo)
IPTU_2023 <- read.csv("dados/IPTU/IPTU_2023.csv", sep=";", encoding = "latin1")
View(IPTU_2023)
remove(IPTU_2023)
lotes <- read_sf("dados/lotes/SIRGAS_SHP_LOTES_01_AGUA_RASA.shp") %>% st_set_crs("epsg:31983")
View(lotes)
IPTU
IPTU %>% as_tibble()
IPTU <- read.csv("dados/IPTU/IPTU_2024.csv", sep=";", encoding = "latin1") %>% as_tibble()
IPTU
IPTU %>% colnames()
IPTU %>% distinct(TIPO.DE.USO.DO.IMOVEL)
IPTU %>% distinct(TIPO.DE.PADRAO.DA.CONSTRUCAO)
remove(logradouro)
str_sub("teste", 1, 2)
str_sub("teste", 1, 3)
IPTU <- read.csv("dados/IPTU/IPTU_2024.csv", sep=";", encoding = "latin1") %>%
as_tibble() %>%
select(sql = "NUMERO.DO.CONTRIBUINTE",
area_terreno = "AREA.DO.TERRENO",
area_construida = "AREA.CONSTRUIDA",
area_ocupada = "AREA.OCUPADA",
tipo = "TIPO.DE.PADRAO.DA.CONSTRUCAO") %>%
mutate(lo_setor =  str_sub(sql, 1, 3),
lo_quadra = str_sub(sql, 4, 7),
lo_lote =   str_sub(sql, 8, 12))
View(IPTU)
IPTU <- read.csv("dados/IPTU/IPTU_2024.csv", sep=";", encoding = "latin1") %>%
as_tibble() %>%
select(sql = "NUMERO.DO.CONTRIBUINTE",
area_terreno = "AREA.DO.TERRENO",
area_construida = "AREA.CONSTRUIDA",
area_ocupada = "AREA.OCUPADA",
tipo = "TIPO.DE.PADRAO.DA.CONSTRUCAO") %>%
mutate(lo_setor =  str_sub(sql, 1, 3),
lo_quadra = str_sub(sql, 4, 6),
lo_lote =   str_sub(sql, 8, 10))
View(IPTU)
remove(gg)
remove(censo)
remove(quadras_viarias)
remove(quadras)
