load("C:/Users/gusth/Downloads/data.RData")
df
class(df)
#Por onde pessoas não ocupadas buscam emprego, separado BF ----
busca_emprego <- df %>%
srvyr::as_survey(strata = stype) %>%
srvyr::group_by(UF, V4072A, VI5002A) %>%
srvyr::survey_tally() %>%
drop_na()
library(PNADcIBGE)
library(srvyr)
library(tidyverse)
library(RColorBrewer)
library(sf)
library(geobr)
library(stringi)
library(openxlsx)
#Por onde pessoas não ocupadas buscam emprego, separado BF ----
busca_emprego <- df %>%
srvyr::as_survey(strata = stype) %>%
srvyr::group_by(UF, V4072A, VI5002A) %>%
srvyr::survey_tally() %>%
drop_na()
carteira_assinada <- df %>%
srvyr::as_survey(strata = stype) %>%
srvyr::group_by(UF, V4029, VI5002A) %>%
srvyr::survey_tally() %>%
pivot_wider(names_from = V4029, values_from = n, id_cols = c(UF, VI5002A)) %>%
filter(VI5002A != "Ignorado") %>%
mutate(tx_carteira_assinada = Sim/(Sim + Não),
UF = stri_trans_general(str = str_to_title(UF),
id = "Latin-ASCII"),
VI5002A = ifelse(VI5002A == "Sim", "Recebe Bolsa Família", "Não Recebe Bolsa Família")) %>%
left_join(estados_geometria)
teste <- df
teste.2 <- df
teste3 <- df
carteira_assinada2 <- df %>%
srvyr::as_survey(strata = stype) %>%
srvyr::group_by(UF, V4029, VI5002A) %>%
srvyr::survey_tally() %>%
pivot_wider(names_from = V4029, values_from = n, id_cols = c(UF, VI5002A)) %>%
filter(VI5002A != "Ignorado") %>%
mutate(tx_carteira_assinada = Sim/(Sim + Não),
UF = stri_trans_general(str = str_to_title(UF),
id = "Latin-ASCII"),
VI5002A = ifelse(VI5002A == "Sim", "Recebe Bolsa Família", "Não Recebe Bolsa Família")) %>%
left_join(estados_geometria)
load("C:/Users/gusth/Downloads/dados.RData")
#Inclusão Digital ----
inclusao_digital <- df %>%
srvyr::as_survey(strata = stype) %>%
srvyr::group_by(UF, VI5002A, S070045, S070046, S070047, S07005B2, S07005B3, S07005B4) %>%
srvyr::survey_tally() %>%
select(-n_se) %>%
filter(VI5002A != 9) %>%
mutate(VI5002A = ifelse(VI5002A == 1, "recebe", "nao_recebe"),
S01025 = ifelse(S01025 == 4, 2, 1),
S01030A1 = ifelse(S01030A1 == 3, NA, S01030A1)) %>%
drop_na()
library(PNADcIBGE)
library(srvyr)
library(tidyverse)
library(RColorBrewer)
library(sf)
library(geobr)
library(stringi)
library(openxlsx)
#Inclusão Digital ----
inclusao_digital <- df %>%
srvyr::as_survey(strata = stype) %>%
srvyr::group_by(UF, VI5002A, S070045, S070046, S070047, S07005B2, S07005B3, S07005B4) %>%
srvyr::survey_tally() %>%
select(-n_se) %>%
filter(VI5002A != 9) %>%
mutate(VI5002A = ifelse(VI5002A == 1, "recebe", "nao_recebe"),
S01025 = ifelse(S01025 == 4, 2, 1),
S01030A1 = ifelse(S01030A1 == 3, NA, S01030A1)) %>%
drop_na()
#Inclusão Digital ----
inclusao_digital <- df %>%
srvyr::as_survey(strata = stype) %>%
srvyr::group_by(UF, VI5002A, S070045, S070046, S070047, S07005B2, S07005B3, S07005B4) %>%
srvyr::survey_tally() %>%
select(-n_se) %>%
filter(VI5002A != 9) %>%
mutate(VI5002A = ifelse(VI5002A == 1, "recebe", "nao_recebe")) %>%
drop_na()
pessoas.uf <- inclusao_digital %>%
group_by(UF, VI5002A) %>%
summarize(n_total = sum(n))
inclusao_digital %>%
left_join(pessoas.uf) %>%
ungroup() %>%
mutate(prop = n / n_total,
across(c(S070045, S070046, S070047, S07005B2, S07005B3, S07005B4), ~ ifelse(. == 1, prop, 0))) %>%
group_by(UF, VI5002A) %>%
summarize(across(c(S070045, S070046, S070047, S07005B2, S07005B3, S07005B4), sum)) %>%
pivot_wider(id_cols = UF, names_from = VI5002A, values_from = c(S070045, S070046, S070047, S07005B2, S07005B3, S07005B4)) %>%
left_join(municipios) %>%
select(-UF, UF = nome)
library(PNADcIBGE)
library(srvyr)
library(tidyverse)
library(RColorBrewer)
library(sf)
library(geobr)
library(stringi)
library(openxlsx)
df <- PNADcIBGE::get_pnadc(2022, topic = 4, labels = FALSE, design = TRUE)
#Inclusão Digital BRASIL----
inclusao_digital <- df %>%
srvyr::as_survey(strata = stype) %>%
srvyr::group_by(VI5002A, across(c(starts_with("S07002"), starts_with("S07004"), starts_with("S07004A"), S07006, S07007))) %>%
srvyr::survey_tally() %>%
select(-n_se)
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(prop = sum(sim)/sum(n)) %>%
pivot_wider(names_from = name, values_from = prop) %>%
openxlsx::write.xlsx("tabelas/inclusao_digital_brasil.xlsx")
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(prop = sum(sim)/sum(n)) %>%
pivot_wider(names_from = name, values_from = prop)
inclusao_digital
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(prop = sum(sim)/sum(n)) %>%
pivot_wider(names_from = name, values_from = prop)
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(prop = sum(sim)/sum(n)) %>%
pivot_wider(names_from = name, values_from = prop) %>% VIew()
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(prop = sum(sim)/sum(n)) %>%
pivot_wider(names_from = name, values_from = prop) %>% View()
View(inclusao_digital)
inclusao_digital %>%
pivot_longer(!n)
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0))
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(sim = sum(sim),
total = sum(total)) %>%
mutate(prop = sim  total)
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(sim = sum(sim),
total = sum(total)) %>%
mutate(prop = sim / total)
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(sim = sum(n),
total = sum(n)) %>%
mutate(prop = sim / total)
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(sim = sum(sim),
total = sum(n)) %>%
mutate(prop = sim/total)
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(sim = sum(sim),
total = sum(n)) %>%
mutate(prop = sim/total) %>%
pivot_wider(names_from = name, values_from = prop) %>% View()
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(sim = sum(sim),
total = sum(n)) %>%
mutate(prop = sim/total)
pivot_wider(names_from = name, values_from = c(sim, total, prop)) %>% View()
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(sim = sum(sim),
total = sum(n)) %>%
mutate(prop = sim/total) %>%
pivot_wider(names_from = name, values_from = c(sim, total, prop)) %>% View()
inclusao_digital %>%
pivot_longer(!n) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(name) %>%
summarize(sim = sum(sim),
total = sum(n)) %>%
mutate(prop = sim/total) %>% View()
inclusao_digital %>%
pivot_longer(!c(n,VI5002A)) %>%
drop_na() %>%
mutate(sim = ifelse(value == 1, n, 0)) %>%
group_by(VI5002A, name) %>%
summarize(sim = sum(sim),
total = sum(n)) %>%
mutate(prop = sim/total) %>% View()
library(OpenStreetMap)
# Teste a instalação do Tensorflow com o comando
tensorflow::tf$constant("Hello TensorFlow!")
# Instale o Tensorflow com os comandos:
remotes::install_github("rstudio/tensorflow")
# Instale o Tensorflow com os comandos:
remotes::install_github("rstudio/tensorflow", force = TRUE)
tensorflow::install_tensorflow(version = "cpu")
# Teste a instalação do Tensorflow com o comando
tensorflow::tf$constant("Hello TensorFlow!")
# Teste a instalação do Tensorflow com o comando
tensorflow::tf$constant("Hello TensorFlow!")
# Teste a instalação do Tensorflow com o comando
tensorflow::tf$constant("Hello TensorFlow!")
# Instale a biblioteca Keras com os seguintes comandos:
remotes::install_github("rstudio/keras", force = TRUE)
keras3::install_keras(envname = "r-tensorflow")
# Para testar a instalação da Keras, rode:
library(keras3)
mnist = dataset_mnist()
library(tidyverse)
library(sf)
distrito <- read_sf("dados/distrito/SIRGAS_SHP_distrito.shp") %>% st_set_crs("epsg:31983")
divisas <- read_sf("dados/divisas/SP_Municipios_2021.shp") %>% st_transform("epsg:31983")
IPTU <- read.csv("dados/IPTU/IPTU_2024.csv", sep=";", encoding = "latin1") %>%
as_tibble() %>%
select(sql = "NUMERO.DO.CONTRIBUINTE",
bairro = "BAIRRO.DO.IMOVEL",
condominio = "NUMERO.DO.CONDOMINIO",
area_terreno = "AREA.DO.TERRENO",
area_construida = "AREA.CONSTRUIDA",
area_ocupada = "AREA.OCUPADA",
tipo = "TIPO.DE.PADRAO.DA.CONSTRUCAO") %>%
mutate(lo_setor =  str_sub(sql, 1, 3),
lo_quadra = str_sub(sql, 4, 6),
lo_lote =   str_sub(sql, 7, 10) %>% ifelse(condominio == "00-0", ., paste("CD", str_sub(condominio, 1, 2), sep = "")))
setwd("C:/git/densidade")
distrito <- read_sf("dados/distrito/SIRGAS_SHP_distrito.shp") %>% st_set_crs("epsg:31983")
divisas <- read_sf("dados/divisas/SP_Municipios_2021.shp") %>% st_transform("epsg:31983")
IPTU <- read.csv("dados/IPTU/IPTU_2024.csv", sep=";", encoding = "latin1") %>%
as_tibble() %>%
select(sql = "NUMERO.DO.CONTRIBUINTE",
bairro = "BAIRRO.DO.IMOVEL",
condominio = "NUMERO.DO.CONDOMINIO",
area_terreno = "AREA.DO.TERRENO",
area_construida = "AREA.CONSTRUIDA",
area_ocupada = "AREA.OCUPADA",
tipo = "TIPO.DE.PADRAO.DA.CONSTRUCAO") %>%
mutate(lo_setor =  str_sub(sql, 1, 3),
lo_quadra = str_sub(sql, 4, 6),
lo_lote =   str_sub(sql, 7, 10) %>% ifelse(condominio == "00-0", ., paste("CD", str_sub(condominio, 1, 2), sep = "")))
lotes <- list.files(path="dados/lotes/unzip", full.names = FALSE) %>%
paste("dados/lotes/unzip/", ., "/", ., ".shp", sep = "") %>%
lapply(read_sf) %>%
bind_rows %>%
st_set_crs("epsg:31983") %>%
mutate(lo_lote = ifelse(lo_lote == "0000", paste("CD", lo_condomi, sep = ""), lo_lote))
IPTU.lotes <- IPTU %>%
left_join(lotes)
remove(IPTU)
remove(lotes)
censo <- read_sf("dados/censo/SP_Malha_Preliminar_2022.shp") %>%
filter(CD_MUN == "3550308") %>%
st_transform("epsg:31983")
gg <- ggplot() +
geom_sf(data = censo %>%
filter(CD_MUN == "3550308") %>%
mutate(densidade = v0001/AREA_KM2,
decil = ntile(densidade, 10)) %>%
st_crop(distrito %>% filter(ds_nome == "LAPA")),
aes(fill = factor(decil)), color = "white") +
geom_sf(data = IPTU.lotes %>%
select(geometry) %>%
st_as_sf() %>%
st_crop(distrito %>% filter(ds_nome == "LAPA")),
aes(geometry = geometry), fill = "red", color = "red", alpha = .25) +
scale_fill_viridis_d() +
labs(fill = "Decil de densidade") +
theme_void()
ggsave("tex/imagens/mapa-lotes.png", gg, width = 20, height = 20, dpi = 300)
